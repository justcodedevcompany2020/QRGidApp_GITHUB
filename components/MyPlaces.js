import React from "react";
import {
    Dimensions,
    Image,
    Slider,
    StyleSheet,
    Text,
    TouchableHighlight,
    View,
    ScrollView,
    TouchableOpacity,
    Modal,
    Pressable,
    Alert,
    StatusBar, Animated,
} from "react-native";

// StatusBar.setHidden(true);

import TopMenu from './includes/TopMenu';
import ChangeTerrain from './includes/ChangeTerrain';

import {
    SafeAreaView,
    SafeAreaProvider,
    SafeAreaInsetsContext,
    useSafeAreaInsets,
    initialWindowMetrics,
} from 'react-native-safe-area-context';

// import Slideshow from 'react-native-image-slider-show';
import Svg, { Path, Defs, G, ClipPath, Circle, Mask, Rect } from "react-native-svg"
import {TextInput} from "react-native-paper";
import {AuthContext} from "./AuthContext/context";


import { LinearGradient } from 'expo-linear-gradient';
import AsyncStorage from "@react-native-async-storage/async-storage";
import axios from "axios";
import {bel, en, ru} from "../i18n/supportedLanguages";

export default class App extends React.Component {


    constructor(props) {
        super(props);
        this.state = {
            openThreeDotModal : false,
            isMapReady: false,
            menuIsOpen: false,

            rus_l: false,
            belarus_l: false,
            eng_l: false,

            email: '',
            email_error: false,
            email_valid: false,


            theme: '',
            theme_error: false,
            theme_valid: false,

            message: '',
            message_error: false,
            message_valid: false,

            my_places: [],
            ratings:[1,2,3,4,5],
            isOpenChangeTerrain: false,

            bottom_right_svg: new Animated.Value(0),

            language: {},
            language_name: '',

        }

        this.handler = this.handler.bind(this)
        this.closeChangeTerrain = this.closeChangeTerrain.bind(this)

    }
    static contextType = AuthContext;

    handler() {
        this.setState({
            menuIsOpen: !this.state.menuIsOpen
        })

    }

    closeChangeTerrain() {
        this.setState({
            isOpenChangeTerrain: false
        })

    }

    goToObjectsMap() {
        this.props.navigation.navigate('ObjectMap')
    }

    goToQrScaner = () => {
        this.props.navigation.navigate('QrScanner')

    }

    logout = () => {
        this.context.signOut();
        this.props.navigation.navigate('Dashboard')
    }



    getMyFavourites = async () => {


        let id_user = await AsyncStorage.getItem('userId');

        let req = {
            id_user: id_user,
            count_page: 1000
        }

        let url = 'https://qr-gid.by/api/by/favorite/list/';

        switch (this.state.language_name) {
            case "bel":
                url = 'https://qr-gid.by/api/by/favorite/list/';
                break;
            case "ru":
                url = 'https://qr-gid.by/api/favorite/list/';
                break;
            case "en":
                url = 'https://qr-gid.by/api/en/favorite/list/';
                break;
        }


        axios.post(url, req).then((response) => {

            // console.log(response.data.items, 'testdkfbklsdbjkbwdjlfgweilfveiul');


            let data = response.data.items;
            let state_data = [];

            for (const data_item in data) {


                let new_data   = data[data_item];
                state_data.push(new_data);

                console.log(state_data, 'state_data')



            }
            this.setState({
                my_places: state_data
            })

            // this.setState({
            //     my_places: response.data.items
            // })

        });


    }


    removeObjectFromFavourites = async (item) => {

        let id_obj = item.id_obj
        let id_user = await AsyncStorage.getItem('userId');

        let req = {
            id_obj:id_obj,
            id_user: id_user
        }
        axios.post('https://qr-gid.by/api/favorite/delete/', req).then((response) => {
            this.getMyFavourites();
        });

    }


    openSingleObject = (id) => {


        let url = 'https://qr-gid.by/api/en/detail/';

        console.log(`https://qr-gid.by/api/en/detail/ID=${id}&no_redirect=true`);

        switch (this.state.language_name) {
            case "bel":
                url = 'https://qr-gid.by/api/by/detail/';
                break;
            case "ru":
                url = 'https://qr-gid.by/api/detail/';
                break;
            case "en":
                url = 'https://qr-gid.by/api/en/detail/';
                break;
        }

        axios.post(url, {ID:id, no_redirect:true}).then((response) => {

            console.log(response.data, 'dqdwefew');

            this.setState({
                isOpenSearchPanel: false
            })
            this.props.navigation.navigate('Object', {
                params: response.data,
            })
        });

    }


    setLanguageFromStorage = async ()=> {

        await AsyncStorage.getItem('language',(err,item) => {

            let language = item ? JSON.parse(item) : {};

            if (language.hasOwnProperty('language')) {

                // i18n.locale = language.language;
                let language_name = 'ru';
                language_name = language.language == 'ru' ? 'ru' : language.language == 'bel' ?  'bel' : 'en';

                this.setState({
                    language: language.language == 'ru' ? ru : language.language == 'bel' ?  bel : en,
                    language_name: language_name
                })

            } else {

                // i18n.locale = 'ru';

                this.setState({
                    language: ru
                })
            }


        })

    }



    componentDidMount() {

        this.setLanguageFromStorage();
        this.getMyFavourites();

        const { navigation } = this.props;
        this.focusListener = navigation.addListener("focus", () => {

            this.setLanguageFromStorage();
            this.getMyFavourites();

        });
    }

    componentWillUnmount() {
        // Remove the event listener
        if (this.focusListener) {
            this.focusListener();
            console.log('Bum END')

        }
        // this.focusListener();

    }




    render() {

        Animated.loop(Animated.timing( this.state.bottom_right_svg,
            {
                toValue: 2,
                duration: 2500,
                // easing: Easing.linear, // Easing is an additional import from react-native
                useNativeDriver: false  // To make use of native driver for performance
            })).start();


        const scale1 = this.state.bottom_right_svg.interpolate({
            inputRange: [0, 1, 2],
            outputRange: [1, 1.1, 1]
        })

        return (

            <SafeAreaView style={[styles.container1]}>

                {/*openThreeDotModal START*/}
                    {this.state.openThreeDotModal &&

                        <TouchableOpacity
                            onPress={() => {this.setState({openThreeDotModal: false})}}
                            style={{width:'100%', height:'100%', position: "absolute", zIndex: 665, top:0, left:0}}>
                        </TouchableOpacity>

                    }
                {/*openThreeDotModal END*/}


                {/*Open Menu Modal START*/}
                    {this.state.menuIsOpen &&

                        <TopMenu
                            handler={this.handler}
                            menuIsOpen={this.state.menuIsOpen}
                            navigation={this.props.navigation}
                        />

                    }
                {/*Open Menu Modal END*/}


                {/*openThreeDotModal START*/}

                    {this.state.openThreeDotModal &&

                        <View style={styles.dotModalWrapper}>

                            <TouchableOpacity
                                onPress={() => this.setState({isOpenChangeTerrain:true, openThreeDotModal: false})}
                                style={{padding: 14, fontSize:16, color:'#1D1D20' }}>
                                <Text style={{}}>
                                    {/*Сменить местность*/}
                                    {this.state.language.change_terrain}

                                </Text>
                            </TouchableOpacity>

                            <TouchableOpacity
                                onPress={() => this.goToObjectsMap()}
                                style={{padding: 14, fontSize:16, color:'#1D1D20'}}>
                                <Text style={{}}>
                                    {/*Карта мест*/}
                                    {this.state.language.location_map}
                                </Text>
                            </TouchableOpacity>

                        </View>

                    }

                {/*openThreeDotModal END*/}




                {/*Выберите местность START*/}

                {this.state.isOpenChangeTerrain &&

                    <ChangeTerrain
                        closeChangeTerrain={this.closeChangeTerrain}
                    />

                }

                {/*Выберите местность END*/}


                {/*TOP PANEL START*/}

                    <View style={ styles.topPanel}>


                        {this.state.my_places.length < 1 &&

                            <Svg style={{position:'absolute', bottom:-60, right:16,}} width={16} height={73} viewBox="0 0 16 73" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <Path d="M8.707.293a1 1 0 00-1.414 0L.929 6.657A1 1 0 102.343 8.07L8 2.414l5.657 5.657a1 1 0 101.414-1.414L8.707.293zM9 73V1H7v72h2z" fill="#C29A0A" />
                            </Svg>

                        }




                        <TouchableOpacity style={{marginRight:16,padding:10}} onPress={() => this.setState({menuIsOpen:true})}>
                            <Svg width={24} height={24} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <Path stroke="#393840" strokeLinecap="round" d="M2.5 5.5L21.5 5.5" />
                                <Path stroke="#393840" strokeLinecap="round" d="M2.5 12L21.5 12" />
                                <Path stroke="#393840" strokeLinecap="round" d="M2.5 18.5L21.5 18.5" />
                            </Svg>
                        </TouchableOpacity>

                        <Text style={styles.toptext}>
                            {/*Мои места*/}
                            {this.state.language.my_places}
                        </Text>

                        <View style={ styles.topPanelRight}>

                            <TouchableOpacity
                                onPress={() => this.goToQrScaner()}
                            >
                                <Svg  width={24}  height={24}  viewBox="0 0 24 24"  fill="none"  xmlns="http://www.w3.org/2000/svg">
                                    <Path fillRule="evenodd" clipRule="evenodd" d="M1.167 1.667a.5.5 0 01.5-.5h4.036a.5.5 0 000-1H1.667a1.5 1.5 0 00-1.5 1.5v4.036a.5.5 0 001 0V1.667zm17.127-1.5a.5.5 0 000 1h4.037a.5.5 0 01.5.5v4.036a.5.5 0 101 0V1.667a1.5 1.5 0 00-1.5-1.5h-4.037zM1.168 18.295a.5.5 0 10-1 0v4.036a1.5 1.5 0 001.5 1.5h4.036a.5.5 0 000-1H1.667a.5.5 0 01-.5-.5v-4.037zm22.664 0a.5.5 0 10-1 0v4.036a.5.5 0 01-.5.5h-4.037a.5.5 0 100 1h4.037a1.5 1.5 0 001.5-1.5v-4.037zM3.5 2.998a.5.5 0 00-.5.5v4.25a.5.5 0 00.5.5h4.25a.5.5 0 00.5-.5v-4.25a.5.5 0 00-.5-.5h-4.25zM4 7.25v-3.25h3.25v3.25h-3.25zm11.75-3.75a.5.5 0 01.5-.5h4.248a.5.5 0 01.5.5v4.25a.5.5 0 01-.5.5h-4.249a.5.5 0 01-.5-.5v-4.25zm1 .5v3.25h3.248v-3.25h-3.249zm-.5 11.75a.5.5 0 00-.5.5v4.249a.5.5 0 00.5.5h4.248a.5.5 0 00.5-.5v-4.25a.5.5 0 00-.5-.5h-4.249zm.5 4.249v-3.25h3.248v3.25h-3.249zm-13.75-3.75a.5.5 0 01.5-.5h4.25a.5.5 0 01.5.5v4.25a.5.5 0 01-.5.5h-4.25a.5.5 0 01-.5-.5v-4.25zm1 .5v3.25h3.25v-3.25h-3.25zM13.916 3.5a.5.5 0 10-1 0v3.75h-2.333a.5.5 0 00-.5.5v3.75h-.916a.5.5 0 000 1h1.416a.5.5 0 00.5-.5v-3.75h2.333a.5.5 0 00.5-.5V3.5zm.917 6.583a.5.5 0 000 1h1.624v2.333a.5.5 0 00.5.5h3.542a.5.5 0 100-1h-3.042v-2.333a.5.5 0 00-.5-.5h-2.124zM3.499 11.5a.5.5 0 000 1h1.417a.5.5 0 100-1H3.499zm10.416 2.624a.5.5 0 10-1 0v3.75h-2.333a.5.5 0 00-.5.5v2.125a.5.5 0 101 0v-1.625h2.333a.5.5 0 00.5-.5v-4.25z" fill="#393840"/>
                                </Svg>
                            </TouchableOpacity>


                            <View style={{marginLeft:24, position:'relative', zIndex: 1}}>

                                <TouchableOpacity  onPress={() => this.setState({ openThreeDotModal: !this.state.openThreeDotModal })}>
                                    <Svg  width={24}  height={24}  viewBox="0 0 24 24"  fill="none"  xmlns="http://www.w3.org/2000/svg">
                                        <Path fillRule="evenodd" clipRule="evenodd" d="M12 5a2 2 0 100-4 2 2 0 000 4zm0 1a3 3 0 100-6 3 3 0 000 6zm0 8a2 2 0 100-4 2 2 0 000 4zm0 1a3 3 0 100-6 3 3 0 000 6zm2 6a2 2 0 11-4 0 2 2 0 014 0zm1 0a3 3 0 11-6 0 3 3 0 016 0z" fill="#44434C"/>
                                    </Svg>
                                </TouchableOpacity>

                            </View>

                        </View>

                    </View>

                {/*TOP PANEL END*/}


                <LinearGradient style={styles.centerMapWrapper} colors={['#FDF5D8', '#FFFFFF']}  >



                    {this.state.my_places.length > 0 ?


                        <ScrollView style={styles.contentScrollView}>


                            {this.state.my_places.map((item, index) => {
                                return (

                                    <View key={index} style={styles.myPlacesItemWrapper}>

                                        <View style={styles.myPlacesItemTopWrapper}>

                                            <View style={styles.myPlacesItemLeft}>

                                                <Text>{item.name}</Text>

                                                <View style={styles.starMainWrapper}>

                                                    <View  style={styles.starWrapper}>
                                                        {this.state.ratings.map((item2,key) => {
                                                            let new_key = key+1;

                                                            if (item.stars !=0 && item.stars >= new_key) {
                                                                return(
                                                                    <Svg key={new_key} width={19} height={17} viewBox="0 0 19 17" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                                        <Path  d="M9.5 1.302l1.919 4.613.117.282.305.025 4.98.4-3.795 3.25-.231.198.07.297 1.16 4.86-4.264-2.604-.261-.159-.26.16-4.265 2.604 1.16-4.86.07-.298-.232-.198-3.794-3.25 4.98-.4.305-.025.117-.282L9.5 1.302z"  fill="#F7D764"  stroke="#C29A0A"/>
                                                                    </Svg>
                                                                )
                                                            } else {
                                                                return(
                                                                    <Svg key={new_key} width={19} height={17} viewBox="0 0 19 17" fill="none" xmlns="http://www.w3.org/2000/svg" >
                                                                        <Path d="M9.5 1.302l1.919 4.613.117.282.305.025 4.98.4-3.795 3.25-.231.198.07.297 1.16 4.86-4.264-2.604-.261-.159-.26.16-4.265 2.604 1.16-4.86.07-.298-.232-.198-3.794-3.25 4.98-.4.305-.025.117-.282L9.5 1.302z" stroke="#C29A0A"  />
                                                                    </Svg>
                                                                )
                                                            }

                                                        })}
                                                    </View>

                                                    <Text style={{color: '#C29A0A', fontSize:10, position:'relative', bottom:-2}}>{parseInt(item.stars)}</Text>

                                                </View>
                                            </View>

                                            <View style={styles.myPlacesItemRight}>
                                                <TouchableOpacity
                                                    style={styles.myPlacesItemRightWishButton}
                                                    onPress={() => {this.removeObjectFromFavourites(item)}}
                                                >
                                                    <Svg  width={25}  height={24}  viewBox="0 0 25 24"  fill="none"  xmlns="http://www.w3.org/2000/svg">
                                                        <Path d="M3.038 23.732c.399.179.818.268 1.231.268.71 0 1.407-.259 1.969-.758l4.976-4.422a1.603 1.603 0 012.132 0l4.976 4.422c.89.79 2.116.978 3.2.49a2.946 2.946 0 001.758-2.717V2.978A2.982 2.982 0 0020.3 0H4.26a2.982 2.982 0 00-2.98 2.978v18.037c0 1.189.674 2.231 1.758 2.717z" fill="#F3C316"/>
                                                        <Path d="M3.038 23.732c.399.179.818.268 1.231.268.71 0 1.407-.259 1.969-.758l4.976-4.422a1.603 1.603 0 012.132 0l4.976 4.422c.89.79 2.116.978 3.2.49a2.946 2.946 0 001.758-2.717V2.978A2.982 2.982 0 0020.3 0H4.26a2.982 2.982 0 00-2.98 2.978v18.037c0 1.189.674 2.231 1.758 2.717zM2.655 2.978c0-.884.72-1.603 1.605-1.603h16.045c.885 0 1.604.719 1.604 1.603v18.037c0 .65-.353 1.196-.946 1.464a1.57 1.57 0 01-1.724-.264l-4.976-4.421a2.971 2.971 0 00-1.98-.752c-.709 0-1.415.25-1.981.752l-4.976 4.421c-.486.431-1.13.532-1.724.264a1.564 1.564 0 01-.947-1.464V2.978z"  fill="#C29A0A"/>
                                                    </Svg>
                                                </TouchableOpacity>


                                                <Image style={styles.myPlacesItemRightImage} source={{uri: item.picture}} />
                                            </View>

                                        </View>

                                        <View style={styles.myPlacesItemBottomWrapper}>
                                            <TouchableOpacity
                                                style={styles.openObject}
                                                // onPress={() => this.goToQrScaner()}
                                                onPress={() => {this.openSingleObject(item.id_obj)}}

                                            >
                                                <Text style={{color:'#8F7000'}}>
                                                    {/*ОПИСАНИЕ*/}
                                                    {this.state.language.about_object_text}
                                                </Text>
                                            </TouchableOpacity>


                                            {/*<TouchableOpacity*/}
                                            {/*    style={styles.addInMarshrut}*/}
                                            {/*    // onPress={() => this.goToQrScaner()}*/}
                                            {/*>*/}
                                            {/*    <Text style={{color:'#076388'}}>ДОБАВИТЬ В МАРШРУТ</Text>*/}
                                            {/*</TouchableOpacity>*/}


                                        </View>

                                    </View>

                                )
                            })}


                        </ScrollView>

                        :

                        <View style={{width:'100%', flex:1, justifyContent:'center', alignItems:'center' }}>


                            <View style={{position:'absolute', top:8, right:8, width: 168, height: 168, borderRadius: 100, backgroundColor:'white'}}>


                                <Svg width={169} height={168} viewBox="0 0 169 168" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <Rect x={0.283936} width={168} height={168} rx={84} fill="#fff" />
                                    <Path d="M32.446 65h-1.33v-4.704c0-1.092.06-2.245.182-3.458L27.392 65h-1.708v-9.646h1.33v4.704c0 1.307-.06 2.473-.182 3.5l3.948-8.204h1.666V65zm5.448-7.546c.438 0 .84.065 1.204.196.364.121.714.322 1.05.602l-.616.812a2.93 2.93 0 00-.77-.406 2.247 2.247 0 00-.812-.14c-.598 0-1.064.238-1.4.714-.327.476-.49 1.18-.49 2.114 0 .933.163 1.624.49 2.072.326.439.793.658 1.4.658.289 0 .555-.042.798-.126a4.39 4.39 0 00.812-.434l.588.84c-.672.541-1.424.812-2.254.812-1 0-1.788-.336-2.366-1.008-.57-.672-.854-1.6-.854-2.786 0-.784.13-1.47.392-2.058.26-.588.63-1.045 1.106-1.372.485-.327 1.059-.49 1.722-.49zM46.238 65v-6.328h-3.024V65h-1.288v-7.378h5.6V65h-1.288zm6.753-7.546c1.036 0 1.839.345 2.408 1.036.579.69.868 1.629.868 2.814 0 .765-.13 1.442-.392 2.03a3.126 3.126 0 01-1.134 1.358c-.495.317-1.083.476-1.764.476-1.036 0-1.843-.345-2.422-1.036-.579-.69-.868-1.629-.868-2.814 0-.765.13-1.437.392-2.016.261-.588.64-1.04 1.134-1.358.495-.327 1.087-.49 1.778-.49zm0 1.036c-1.279 0-1.918.943-1.918 2.828 0 1.876.635 2.814 1.904 2.814 1.27 0 1.904-.943 1.904-2.828 0-1.876-.63-2.814-1.89-2.814zm10.706-.868V65h-1.288v-6.328h-2.282l-.21 2.464c-.084.999-.191 1.745-.322 2.24-.121.495-.317.877-.588 1.148-.261.261-.663.476-1.204.644l-.322-1.022c.317-.112.541-.257.672-.434.13-.177.229-.448.294-.812.065-.364.135-.999.21-1.904l.294-3.374h4.746zm4.965 2.38c1.102 0 1.9.215 2.394.644.495.43.742 1.04.742 1.834 0 .83-.28 1.46-.84 1.89-.55.42-1.236.63-2.058.63h-2.506v-7.378h1.288v2.38h.98zm.126 3.99c.523 0 .924-.117 1.204-.35.29-.233.434-.62.434-1.162 0-.513-.135-.891-.406-1.134-.26-.243-.718-.364-1.372-.364h-.966v3.01h1.106zm6.407-6.538c.466 0 .9.08 1.302.238.41.15.737.373.98.672.252.299.378.658.378 1.078 0 .41-.122.747-.364 1.008-.234.261-.607.462-1.12.602.616.103 1.082.294 1.4.574.317.28.476.681.476 1.204 0 .765-.299 1.349-.896 1.75-.588.392-1.34.588-2.254.588-1.111 0-2.058-.308-2.842-.924l.672-.798c.326.233.653.406.98.518.336.112.718.168 1.148.168 1.204 0 1.806-.439 1.806-1.316 0-.43-.173-.728-.518-.896-.336-.177-.808-.266-1.414-.266h-.98l.084-1.008h.756c.522 0 .942-.093 1.26-.28.317-.187.476-.476.476-.868 0-.364-.136-.625-.406-.784-.271-.168-.626-.252-1.064-.252-.383 0-.724.051-1.022.154-.29.093-.584.243-.882.448l-.616-.77c.373-.28.774-.49 1.204-.63.429-.14.914-.21 1.456-.21zm7.977 7.588c-.289.859-.695 1.535-1.218 2.03-.513.504-1.25.807-2.212.91l-.14-1.008c.486-.084.873-.205 1.162-.364a1.91 1.91 0 00.686-.616c.178-.243.341-.574.49-.994h-.434l-2.478-7.378H80.4l1.974 6.44 1.932-6.44h1.33l-2.464 7.42zM92.884 65H91.61v-3.332c0-.56.019-1.092.056-1.596.037-.504.07-.835.098-.994L88.67 65h-1.526v-7.378h1.274v3.332c0 .495-.019 1.008-.056 1.54-.037.523-.065.859-.084 1.008l3.052-5.88h1.554V65zm-2.898-9.002c-.57 0-1.05-.145-1.442-.434a1.702 1.702 0 01-.658-1.204l.854-.182c.093.299.238.513.434.644.205.13.476.196.812.196.336 0 .611-.065.826-.196.215-.14.369-.355.462-.644l.854.182a1.669 1.669 0 01-.686 1.204c-.392.29-.877.434-1.456.434zm10.571 1.624l-.154 1.05h-2.366V65H96.75v-6.328h-2.435v-1.05h6.243zm6.584 3.472c0 .215-.009.434-.028.658h-4.704c.056.812.262 1.41.616 1.792.355.383.812.574 1.372.574.355 0 .682-.051.98-.154.299-.103.612-.266.938-.49l.56.77c-.784.616-1.642.924-2.576.924-1.026 0-1.829-.336-2.408-1.008-.569-.672-.854-1.596-.854-2.772 0-.765.122-1.442.364-2.03.252-.597.607-1.064 1.064-1.4.467-.336 1.013-.504 1.638-.504.98 0 1.732.322 2.254.966.523.644.784 1.535.784 2.674zm-1.274-.378c0-.728-.144-1.283-.434-1.666-.289-.383-.723-.574-1.302-.574-1.054 0-1.628.775-1.722 2.324h3.458v-.084zm12.636-3.094l-2.24 3.416L118.769 65h-1.526l-2.044-3.402h-.938V65h-1.288v-7.378h1.288v2.968h.966l1.862-2.968h1.414zm6.53 5.656c0 .299.051.523.154.672.103.14.257.247.462.322l-.294.896c-.383-.047-.691-.154-.924-.322-.233-.168-.406-.43-.518-.784-.495.737-1.227 1.106-2.198 1.106-.728 0-1.302-.205-1.722-.616-.42-.41-.63-.947-.63-1.61 0-.784.28-1.386.84-1.806.569-.42 1.372-.63 2.408-.63h1.134v-.546c0-.523-.126-.896-.378-1.12-.252-.224-.639-.336-1.162-.336-.541 0-1.204.13-1.988.392l-.322-.938c.915-.336 1.764-.504 2.548-.504.868 0 1.517.215 1.946.644.429.42.644 1.022.644 1.806v3.374zm-3.024.924c.737 0 1.316-.383 1.736-1.148V61.36h-.966c-1.363 0-2.044.504-2.044 1.512 0 .439.107.77.322.994.215.224.532.336.952.336zm9.092-6.748c.943 0 1.634.336 2.072 1.008.439.672.658 1.62.658 2.842 0 1.157-.252 2.09-.756 2.8s-1.218 1.064-2.142 1.064c-.821 0-1.465-.28-1.932-.84v3.5l-1.288.154v-10.36h1.106l.098.994c.271-.373.598-.658.98-.854a2.513 2.513 0 011.204-.308zm-.476 6.664c1.214 0 1.82-.938 1.82-2.814 0-1.885-.555-2.828-1.666-2.828-.364 0-.695.107-.994.322-.298.215-.56.49-.784.826v3.598c.187.29.42.513.7.672.28.15.588.224.924.224zm10.064-6.496l-.154 1.05h-2.366V65h-1.288v-6.328h-2.436v-1.05h6.244zm4.322 7.42c-.29.859-.696 1.535-1.218 2.03-.514.504-1.251.807-2.212.91l-.14-1.008c.485-.084.872-.205 1.162-.364.289-.159.518-.364.686-.616.177-.243.34-.574.49-.994h-.434l-2.478-7.378h1.372l1.974 6.44 1.932-6.44h1.33l-2.464 7.42zM28.386 73.454c1.036 0 1.839.345 2.408 1.036.579.69.868 1.629.868 2.814 0 .765-.13 1.442-.392 2.03a3.126 3.126 0 01-1.134 1.358c-.495.317-1.083.476-1.764.476-1.036 0-1.843-.345-2.422-1.036-.579-.69-.868-1.629-.868-2.814 0-.765.13-1.437.392-2.016.261-.588.64-1.04 1.134-1.358.495-.327 1.087-.49 1.778-.49zm0 1.036c-1.279 0-1.918.943-1.918 2.828 0 1.876.635 2.814 1.904 2.814 1.27 0 1.904-.943 1.904-2.828 0-1.876-.63-2.814-1.89-2.814zm8.659-.392c.84 0 1.507.303 2.002.91.504.607.756 1.433.756 2.478 0 1.167-.294 2.072-.882 2.716-.588.644-1.377.966-2.366.966-.99 0-1.783-.35-2.38-1.05-.588-.7-.882-1.76-.882-3.178 0-1.073.079-1.95.238-2.632.168-.69.452-1.255.854-1.694.41-.448.984-.798 1.722-1.05.55-.187.989-.355 1.316-.504.336-.15.676-.34 1.022-.574l.546.966a12.02 12.02 0 01-1.022.574c-.346.168-.761.331-1.246.49-.467.159-.836.34-1.106.546-.271.196-.49.485-.658.868-.159.373-.266.887-.322 1.54.261-.43.597-.765 1.008-1.008a2.7 2.7 0 011.4-.364zm-.49 6.034c.569 0 1.022-.191 1.358-.574.336-.392.504-1.069.504-2.03 0-.85-.14-1.46-.42-1.834-.271-.373-.668-.56-1.19-.56-.43 0-.831.117-1.204.35-.374.224-.682.57-.924 1.036v.896c0 .868.163 1.54.49 2.016.336.467.798.7 1.386.7zm8.5-4.13c1.102 0 1.9.215 2.395.644.494.43.742 1.04.742 1.834 0 .83-.28 1.46-.84 1.89-.551.42-1.237.63-2.058.63h-2.506v-6.398h-2.436v-.98h3.724v2.38h.98zm.127 3.99c.522 0 .924-.117 1.204-.35.289-.233.434-.62.434-1.162 0-.513-.136-.891-.406-1.134-.262-.243-.719-.364-1.372-.364h-.966v3.01h1.106zm10.431-2.898c0 .215-.01.434-.028.658h-4.704c.056.812.261 1.41.616 1.792.355.383.812.574 1.372.574.355 0 .681-.051.98-.154.299-.103.612-.266.938-.49l.56.77c-.784.616-1.642.924-2.576.924-1.026 0-1.83-.336-2.408-1.008-.57-.672-.854-1.596-.854-2.772 0-.765.121-1.442.364-2.03.252-.597.607-1.064 1.064-1.4.467-.336 1.013-.504 1.638-.504.98 0 1.731.322 2.254.966.523.644.784 1.535.784 2.674zm-1.274-.378c0-.728-.145-1.283-.434-1.666-.29-.383-.723-.574-1.302-.574-1.055 0-1.629.775-1.722 2.324h3.458v-.084zm8.896-3.094l-2.24 3.416L63.501 81h-1.526l-2.044-3.402h-.938V81h-1.288v-7.378h1.288v2.968h.966l1.862-2.968h1.414zm6.749 0l-.154 1.05h-2.366V81h-1.288v-6.328H63.74v-1.05h6.244zm3.784-.168c1.036 0 1.838.345 2.408 1.036.578.69.868 1.629.868 2.814 0 .765-.13 1.442-.392 2.03a3.126 3.126 0 01-1.134 1.358c-.495.317-1.083.476-1.764.476-1.036 0-1.844-.345-2.422-1.036-.579-.69-.868-1.629-.868-2.814 0-.765.13-1.437.392-2.016.261-.588.64-1.04 1.134-1.358.495-.327 1.087-.49 1.778-.49zm0 1.036c-1.279 0-1.918.943-1.918 2.828 0 1.876.635 2.814 1.904 2.814 1.27 0 1.904-.943 1.904-2.828 0-1.876-.63-2.814-1.89-2.814zm9.33 2.506c1.251.121 1.877.7 1.877 1.736 0 .775-.285 1.349-.854 1.722-.56.364-1.312.546-2.254.546h-2.66v-7.28a12.15 12.15 0 012.422-.266c.914 0 1.638.173 2.17.518.532.345.798.84.798 1.484 0 .42-.126.76-.378 1.022-.252.261-.626.434-1.12.518zm-1.455-2.548a7.73 7.73 0 00-1.148.084v2.086h1.386c.448 0 .793-.084 1.036-.252.242-.168.364-.453.364-.854 0-.373-.136-.644-.406-.812-.271-.168-.682-.252-1.232-.252zm.224 5.544c.55 0 .98-.093 1.288-.28.308-.187.462-.523.462-1.008 0-.401-.131-.69-.392-.868-.262-.177-.705-.266-1.33-.266h-1.4v2.422h1.372zm5.613-.77a.95.95 0 01.7.28c.187.187.28.415.28.686 0 .29-.084.62-.252.994l-.938 2.142h-.924l.56-2.324a1.072 1.072 0 01-.294-.35 1.08 1.08 0 01-.098-.462c0-.27.093-.5.28-.686a.933.933 0 01.686-.28zm11.87-5.6V81h-1.288v-3.08c-.27.252-.606.453-1.008.602-.392.14-.798.21-1.218.21-.7 0-1.227-.187-1.582-.56-.354-.383-.532-.924-.532-1.624v-2.926h1.288v2.772c0 .467.094.807.28 1.022.196.205.495.308.896.308a2.63 2.63 0 001.022-.224c.364-.15.649-.34.854-.574v-3.304h1.288zm7.676 0l-.154 1.05h-2.366V81h-1.288v-6.328h-2.436v-1.05h6.244zm3.784-.168c1.036 0 1.839.345 2.408 1.036.579.69.868 1.629.868 2.814 0 .765-.131 1.442-.392 2.03a3.122 3.122 0 01-1.134 1.358c-.495.317-1.083.476-1.764.476-1.036 0-1.843-.345-2.422-1.036-.579-.69-.868-1.629-.868-2.814 0-.765.131-1.437.392-2.016.261-.588.639-1.04 1.134-1.358.495-.327 1.087-.49 1.778-.49zm0 1.036c-1.279 0-1.918.943-1.918 2.828 0 1.876.635 2.814 1.904 2.814s1.904-.943 1.904-2.828c0-1.876-.63-2.814-1.89-2.814zm8.659-.392c.84 0 1.507.303 2.002.91.504.607.756 1.433.756 2.478 0 1.167-.294 2.072-.882 2.716-.588.644-1.377.966-2.366.966-.99 0-1.783-.35-2.38-1.05-.588-.7-.882-1.76-.882-3.178 0-1.073.079-1.95.238-2.632.168-.69.452-1.255.854-1.694.41-.448.984-.798 1.722-1.05.55-.187.989-.355 1.316-.504.336-.15.676-.34 1.022-.574l.546.966c-.327.205-.668.397-1.022.574a10 10 0 01-1.246.49c-.467.159-.836.34-1.106.546-.271.196-.49.485-.658.868-.159.373-.266.887-.322 1.54a2.89 2.89 0 011.008-1.008c.41-.243.877-.364 1.4-.364zm-.49 6.034c.569 0 1.022-.191 1.358-.574.336-.392.504-1.069.504-2.03 0-.85-.14-1.46-.42-1.834-.271-.373-.668-.56-1.19-.56-.43 0-.831.117-1.204.35-.374.224-.682.57-.924 1.036v.896c0 .868.163 1.54.49 2.016.336.467.798.7 1.386.7zm7.54-4.13c1.101 0 1.899.215 2.394.644.495.43.742 1.04.742 1.834 0 .83-.28 1.46-.84 1.89-.551.42-1.237.63-2.058.63h-2.366v-7.378h1.288v2.38h.84zm4.2-2.38h1.288V81h-1.288v-7.378zm-4.074 6.37c.523 0 .924-.117 1.204-.35.289-.233.434-.62.434-1.162 0-.513-.135-.891-.406-1.134-.261-.243-.719-.364-1.372-.364h-.826v3.01h.966zM29.968 97v-3.248h-3.066V97h-1.288v-7.378h1.288v3.094h3.066v-3.094h1.288V97h-1.288zm8.95-1.722c0 .299.051.523.154.672.102.14.256.247.462.322l-.294.896c-.383-.047-.69-.154-.924-.322-.234-.168-.406-.43-.518-.784-.495.737-1.228 1.106-2.198 1.106-.728 0-1.302-.205-1.722-.616-.42-.41-.63-.947-.63-1.61 0-.784.28-1.386.84-1.806.57-.42 1.372-.63 2.408-.63h1.134v-.546c0-.523-.126-.896-.378-1.12-.252-.224-.64-.336-1.162-.336-.542 0-1.204.13-1.988.392l-.322-.938c.914-.336 1.764-.504 2.548-.504.868 0 1.516.215 1.946.644.43.42.644 1.022.644 1.806v3.374zm-3.024.924c.737 0 1.316-.383 1.736-1.148V93.36h-.966c-1.363 0-2.044.504-2.044 1.512 0 .439.107.77.322.994.214.224.532.336.952.336zM47.338 97h-1.274v-3.332c0-.56.019-1.092.056-1.596.037-.504.07-.835.098-.994L43.124 97h-1.526v-7.378h1.274v3.332c0 .495-.019 1.008-.056 1.54-.037.523-.065.859-.084 1.008l3.052-5.88h1.554V97zm-2.898-9.002c-.57 0-1.05-.145-1.442-.434a1.701 1.701 0 01-.658-1.204l.854-.182c.093.299.238.513.434.644.205.13.476.196.812.196.336 0 .611-.065.826-.196.215-.14.369-.355.462-.644l.854.182a1.669 1.669 0 01-.686 1.204c-.392.29-.877.434-1.456.434zm10.572 1.624l-.154 1.05h-2.366V97h-1.288v-6.328h-2.437v-1.05h6.244zM62.118 97h-1.274v-3.332c0-.56.019-1.092.056-1.596.037-.504.07-.835.098-.994L57.905 97h-1.526v-7.378h1.274v3.332c0 .495-.019 1.008-.056 1.54-.037.523-.065.859-.084 1.008l3.052-5.88h1.554V97zm11.834-7.378V97h-1.288v-6.328h-2.283l-.21 2.464c-.084.999-.19 1.745-.322 2.24-.12.495-.317.877-.587 1.148-.262.261-.663.476-1.205.644l-.322-1.022c.318-.112.542-.257.672-.434.131-.177.23-.448.294-.812.066-.364.136-.999.21-1.904l.294-3.374h4.746zm8.395-.168c.644 0 1.204.159 1.68.476.476.317.84.765 1.092 1.344.261.579.392 1.255.392 2.03 0 .728-.126 1.386-.378 1.974a3.159 3.159 0 01-1.092 1.386c-.476.336-1.045.504-1.708.504-.896 0-1.615-.313-2.156-.938-.541-.635-.85-1.46-.924-2.478h-1.316V97H76.65v-7.378h1.288v3.094h1.33c.103-.961.425-1.745.966-2.352.55-.607 1.255-.91 2.114-.91zm-.014 6.678c.635 0 1.092-.238 1.372-.714s.42-1.18.42-2.114c0-.896-.154-1.587-.462-2.072-.308-.485-.747-.728-1.316-.728-1.185 0-1.778.938-1.778 2.814 0 .896.15 1.591.448 2.086.299.485.737.728 1.316.728zm8.563-6.034c.84 0 1.507.303 2.002.91.504.607.756 1.433.756 2.478 0 1.167-.294 2.072-.882 2.716-.588.644-1.376.966-2.366.966-.99 0-1.782-.35-2.38-1.05-.588-.7-.882-1.76-.882-3.178 0-1.073.08-1.95.238-2.632.168-.69.453-1.255.854-1.694.41-.448.985-.798 1.722-1.05.55-.187.99-.355 1.316-.504.336-.15.677-.34 1.022-.574l.546.966c-.327.205-.667.397-1.022.574-.345.168-.76.331-1.246.49-.466.159-.835.34-1.106.546-.27.196-.49.485-.658.868-.159.373-.266.887-.322 1.54.261-.43.597-.765 1.008-1.008a2.7 2.7 0 011.4-.364zm-.49 6.034c.57 0 1.022-.191 1.358-.574.336-.392.504-1.069.504-2.03 0-.85-.14-1.46-.42-1.834-.27-.373-.667-.56-1.19-.56-.43 0-.83.117-1.204.35-.373.224-.681.57-.924 1.036v.896c0 .868.163 1.54.49 2.016.336.467.798.7 1.386.7zM101.56 97h-1.274v-3.332a21.278 21.278 0 01.154-2.59L97.346 97H95.82v-7.378h1.274v3.332c0 .495-.02 1.008-.056 1.54-.038.523-.066.859-.084 1.008l3.052-5.88h1.554V97zm9.913 0h-1.26l-.336-3.486a14.991 14.991 0 01-.07-1.204 71.875 71.875 0 01-.014-1.442l-1.68 5.32h-1.218l-1.568-5.306c0 1.232-.019 2.105-.056 2.618l-.266 3.5h-1.246l.658-7.378h1.666l1.442 5.278 1.582-5.278h1.694l.672 7.378zm4.332-4.998c1.101 0 1.899.215 2.394.644.494.43.742 1.04.742 1.834 0 .83-.28 1.46-.84 1.89-.551.42-1.237.63-2.058.63h-2.366v-7.378h1.288v2.38h.84zm4.2-2.38h1.288V97h-1.288v-7.378zm-4.074 6.37c.522 0 .924-.117 1.204-.35.289-.233.434-.62.434-1.162 0-.513-.136-.891-.406-1.134-.262-.243-.719-.364-1.372-.364h-.826v3.01h.966zm13.634-2.898c0 .215-.009.434-.028.658h-4.704c.056.812.261 1.41.616 1.792.355.383.812.574 1.372.574.355 0 .681-.051.98-.154.299-.103.611-.266.938-.49l.56.77c-.784.616-1.643.924-2.576.924-1.027 0-1.829-.336-2.408-1.008-.569-.672-.854-1.596-.854-2.772 0-.765.121-1.442.364-2.03.252-.597.607-1.064 1.064-1.4.467-.336 1.013-.504 1.638-.504.98 0 1.731.322 2.254.966.523.644.784 1.535.784 2.674zm-1.274-.378c0-.728-.145-1.283-.434-1.666-.289-.383-.723-.574-1.302-.574-1.055 0-1.629.775-1.722 2.324h3.458v-.084zM32.838 113h-1.26l-.336-3.486a15.03 15.03 0 01-.07-1.204c-.01-.448-.014-.929-.014-1.442l-1.68 5.32H28.26l-1.568-5.306c0 1.232-.019 2.105-.056 2.618l-.266 3.5h-1.246l.658-7.378h1.666l1.442 5.278 1.582-5.278h1.694l.672 7.378zm7.776-3.906c0 .215-.01.434-.028.658h-4.704c.056.812.26 1.409.616 1.792.354.383.812.574 1.372.574.354 0 .68-.051.98-.154.298-.103.61-.266.938-.49l.56.77c-.785.616-1.643.924-2.576.924-1.027 0-1.83-.336-2.408-1.008-.57-.672-.854-1.596-.854-2.772 0-.765.12-1.442.364-2.03.252-.597.606-1.064 1.063-1.4.467-.336 1.013-.504 1.639-.504.98 0 1.73.322 2.254.966.522.644.784 1.535.784 2.674zm-1.274-.378c0-.728-.145-1.283-.434-1.666-.29-.383-.724-.574-1.303-.574-1.054 0-1.628.775-1.721 2.324h3.458v-.084zm6.053-3.262c.44 0 .84.065 1.204.196a3.24 3.24 0 011.05.602l-.616.812a2.92 2.92 0 00-.77-.406 2.253 2.253 0 00-.812-.14c-.597 0-1.064.238-1.4.714-.326.476-.49 1.181-.49 2.114 0 .933.164 1.624.49 2.072.327.439.794.658 1.4.658.29 0 .556-.042.798-.126.243-.093.514-.238.812-.434l.588.84c-.672.541-1.423.812-2.254.812-.998 0-1.787-.336-2.366-1.008-.569-.672-.854-1.601-.854-2.786 0-.784.131-1.47.392-2.058.262-.588.63-1.045 1.106-1.372.486-.327 1.06-.49 1.722-.49zm9.017.168l-.154 1.05H51.89V113h-1.288v-6.328h-2.436v-1.05h6.244zm5.777 5.656c0 .299.051.523.154.672.102.14.256.247.462.322l-.294.896c-.383-.047-.69-.154-.924-.322-.233-.168-.406-.429-.518-.784-.495.737-1.227 1.106-2.198 1.106-.728 0-1.302-.205-1.722-.616-.42-.411-.63-.947-.63-1.61 0-.784.28-1.386.84-1.806.57-.42 1.372-.63 2.408-.63h1.134v-.546c0-.523-.126-.896-.378-1.12-.252-.224-.64-.336-1.162-.336-.541 0-1.204.131-1.988.392l-.322-.938c.915-.336 1.764-.504 2.548-.504.868 0 1.517.215 1.946.644.43.42.644 1.022.644 1.806v3.374zm-3.024.924c.737 0 1.316-.383 1.736-1.148v-1.694h-.966c-1.363 0-2.044.504-2.044 1.512 0 .439.107.77.322.994.215.224.532.336.952.336z" fill="#54535F"/>
                                </Svg>

                                {/*Top left START*/}


                                    <Animated.View style={{transform: [ { scale: scale1 },], position:'absolute', right: 55, top: 0, zIndex: 88  }} >

                                        <Svg width={25} height={24} viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <Circle cx={12.2839} cy={12} r={12} fill="#F3C316" />
                                        </Svg>

                                    </Animated.View>


                                {/*Top left END*/}



                                {/*Top right START*/}


                                    <Animated.View style={{transform: [ { scale: scale1 },], position:'absolute', right: 30, top: 0, zIndex: 87  }} >

                                        <Svg width={41} height={40} viewBox="0 0 41 40" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <Circle cx={20.2839} cy={20} r={20} fill="#FAE69E" />
                                        </Svg>
                                    </Animated.View>


                                {/*Top right END*/}


                                {/*Bottom right START*/}


                                    <Animated.View style={{transform: [ { scale: scale1 },], position:'absolute', right:0, bottom: 0, zIndex: 88  }} >

                                        <Svg width={57} height={56} viewBox="0 0 57 56" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <Circle cx={28.2839} cy={28} r={28} fill="#FAE69E" />
                                        </Svg>

                                        <Svg style={{ position:'absolute', right:0, bottom: 0, zIndex: 88  }} width={19} height={18} viewBox="0 0 19 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <Circle cx={9.28394} cy={9} r={9} fill="#FDF5D8" />
                                        </Svg>

                                    </Animated.View>


                                {/*Bottom right END*/}


                                {/*Bottom left START*/}

                                    <Animated.View style={{transform: [ { scale: scale1 },], position:'absolute', left:10, bottom: 0, zIndex: 88  }} >

                                        <Svg width={33} height={32} viewBox="0 0 33 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <Circle cx={16.2839} cy={16} r={16} fill="#F7D764" />
                                        </Svg>

                                    </Animated.View>

                                {/*Bottom left END*/}

                            </View>


                            <View style={{width:'100%', marginBottom:16,  justifyContent:'center', alignItems:'center'}}>
                                <Svg  width={80}  height={80}  viewBox="0 0 80 80"  fill="none"  xmlns="http://www.w3.org/2000/svg">
                                    <Path fillRule="evenodd" clipRule="evenodd" d="M77 45L63.282 20.135A8 8 0 0056.277 16H22.869a8 8 0 00-7.106 4.325L3 45v20a8 8 0 008 8h58a8 8 0 008-8V45zm-55.433 3H6v17a5 5 0 005 5h58a5 5 0 005-5V48H56.433c-1.998 5.176-9.046 9-17.433 9s-15.435-3.824-17.433-9z" fill="#F3C316"/>
                                </Svg>

                                <Text style={{color: '#54535F', fontSize:16}}>
                                    У вас пока нет любимых мест
                                </Text>
                            </View>


                        </View>
                    }





                </LinearGradient>




            </SafeAreaView>

        )
    }
}

const styles = StyleSheet.create({
    container1: {
        flex: 1,
        alignItems: 'center',
        justifyContent: 'flex-start',
        backgroundColor:'white',
        position:'relative'
    },
    topPanelRight: {
        alignItems:"center",
        justifyContent:'flex-end',
        flexDirection:'row',
        flex:1
    },

    topPanel:{
        backgroundColor:'white',
        width:'100%',
        height:56,
        paddingLeft:12,
        paddingRight:12,
        alignItems: 'center',
        justifyContent: 'flex-start',
        flexDirection:'row',
        shadowColor: "#000",
        shadowOffset: {
            width: 0,
            height: 3,
        },
        shadowOpacity: 0.27,
        shadowRadius: 8.65,
        elevation: 6,

    },

    centerMapWrapper:{
        flex: 1,
        width:'100%',
        backgroundColor:'#F9F3F1'

    },
    bottomMenuWrapper:{
        backgroundColor:'white',
        width:'100%',
        height:56,
        borderTopColor: 'black',
        borderTopWidth:1,
        flexDirection:'row'
    },

    dotModalWrapper: {
        width:224,
        backgroundColor:'white',
        borderRadius:8,
        position:'absolute',
        top:50, right:15,
        zIndex: 666,
        shadowColor: "#000",
        shadowOffset: {
            width: 0,
            height: 3,
        },
        shadowOpacity: 0.27,
        shadowRadius: 4.65,

        elevation: 7,
    },

    menuItem:{
        width: '100%',
        height: 48,
        paddingLeft: 25,
        flexDirection:'row',
        alignItems:'center'
    },
    menuItemSvg:{
        marginRight:21
    },
    menuItemText:{
        color:'#1D1D20',
        fontSize:16
    },
    toptext: {
        fontSize: 20,
        color:'#1D1D20',
    },
    contentScrollView:{
        width:'100%',
        paddingVertical:19,
        paddingHorizontal:16,
    },
    itemWrapper:{
        width:'100%',
        paddingHorizontal:16,
        flexDirection:'row',
        justifyContent:'space-between',
        marginBottom:28
    },
    itemWrapperLeft:{
        fontSize:16,
        color: '#54535F'
    },
    itemWrapperRight:{
        color: '#1D1D20',
        fontSize:16
    },

    languageItemWrapper:{
        width:'100%',
        flexDirection:'row',
        alignItems:'center',
        marginBottom: 36
    },
    languageItemCheckBox:{
        width:20,
        height:20,
        borderRadius: 50,
        borderWidth:1,
        borderColor: '#9F9EAE',
        marginRight: 20,
        alignItems:'center',
        justifyContent:'center'
    },
    languageItemCheckBoxActive:{
        width:16,
        height:16,
        backgroundColor: '#9F9EAE',
        borderRadius: 50,
    },
    languageItemText:{
        color:'#1D1D20',
        fontSize:16
    },
    save_button:{
        width:'100%',
        maxWidth:328,
        backgroundColor:'#E1C1B7',
        height:34,
        alignItems:'center',
        justifyContent:'center',
        borderRadius:8,
        marginHorizontal:16,
        marginBottom:16
    },
    save_button_text:{
        color:'#1D1D20',
        fontSize:14,
        fontWeight:'bold'
    },
    save_button_wrapper:{
        width:'100%',
        alignItems:'center'
    },
    inputWrapper: {
        width:'100%'
    },
    emptyInput:{
        position: 'absolute',
        zIndex: 5,
        alignSelf: 'center',
        top: 12,
        right: 12,
    },
    input: {
        width:'100%',
        height: 44,
        backgroundColor: 'white',
        fontSize:14,
        color:'#55545F',
        borderRadius:8,
        paddingHorizontal:16
    },

    inp_buttom_label:{
        fontSize:12,
        color:'#54535F',
        marginBottom: 16,
        marginLeft: 16
    },
    userInfoWrapper:{
        width:'100%',
        backgroundColor:'white',
        borderRadius:18,
        marginTop:56,
        paddingHorizontal:16,
        paddingTop: 50,

    },
    tinyLogo:{
        width:80,
        height:80,
        borderRadius:12,
        position:'absolute',
        top:-40,
        left:16
    },


    info2Wrapper:{
        width:'100%'
    },
    info2ItemWrapper:{
        flexDirection:'row',
        alignItems:'center',
        marginBottom:16
    },
    info2ItemLeft:{
        marginRight:8
    },
    info2ItemRight:{
        color:'#1D1D20',
        fontSize:16
    },
    editProfileButton:{
        width:'100%',
        justifyContent:'center',
        alignItems:'center',
        height:36,
        borderRadius:8,
        borderColor:"#9F9EAE",
        borderWidth:1,
        marginBottom:16
    },

    myPlacesItemWrapper:{
        width:'100%',
        padding:16,
        paddingBottom:8,
        backgroundColor:'white',
        borderRadius:18,
        borderColor:'#FAE69E',
        borderWidth:1,
        marginBottom:11,
    },
    myPlacesItemTopWrapper:{
        width:'100%',
        flexDirection:'row'
    },

    myPlacesItemLeft:{
        flex:1,
    },

    myPlacesItemRight:{
        width:80,
        height:80
    },

    myPlacesItemRightImage:{
        width:'100%',
        height:'100%'
    },
    myPlacesItemBottomWrapper:{
        width:'100%',
        flexDirection:'row'

    },
    openObject:{
        paddingHorizontal:8,
        paddingVertical:11
    },
    addInMarshrut:{
        paddingHorizontal:8,
        paddingVertical:11,

    },

    myPlacesItemRightWishButton:{
        position:'absolute',
        top:0,
        right:-2,
        zIndex:5
    },
    starMainWrapper:{
        flexDirection:'row',
        justifyContent:'flex-start',
        alignItems:'flex-end',
        marginTop:6

    },
    starWrapper:{
        flexDirection:'row',
        marginRight:8
    },

})
